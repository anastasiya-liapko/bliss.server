{"version":3,"sources":["form.js","toast.js","validator.js","application.js","asterisks-code-sms.js","form-code-sms.js","form-phone-number.js","form-profile-client.js","form-profile-shop.js","form-success.js","modal-no-response.js","modal-send-request.js","modal-wait-response.js","swiper.js","timer-code-sms.js","timer-profile-client.js"],"names":["Form","Toast","send","action","data","submitButton","prop","$","ajax","cache","dataType","method","url","success","openModal","id","modal","backdrop","keyboard","closeModal","removeElement","fadeOut","this","remove","timer","progressBar","progressBarInner","find","countdown","end","on","event","html","strftime","width","endAfter","offset","totalSeconds","onFinish","message","create","error","redirect","window","location","href","e","console","log","changeButtonStatus","form","button","validate","checkForm","toast","append","addClass","setTimeout","validator","addMethod","value","element","optional","test","smsCodeInput","smsCodeAsterisks","text","val","smsCodeAsterisksValue","replace","inputmask","highlight","unhighlight","removeClass","submitHandler","attr","serialize","is","ignore","rules","sms_code","required","number","normalizer","trim","terms","plain_text","messages","errorClass","errorElement","phoneInput","phone","phone_ru","birthDateInput","tinInput","passportNumberInput","passportDivisionCodeInput","passportIssuedDateInput","regZipCodeInput","regCityInput","regBuildingInput","regStreetInput","regApartmentInput","factZipCodeInput","factCityInput","factBuildingInput","factStreetInput","factApartmentInput","last_name","first_name","middle_name","birth_date","birth_place","tin","passport_number","passport","passport_division_code","division_code","passport_issued_by","passport_issued_date","workplace","salary","reg_zip_code","reg_city","reg_street","reg_building","reg_apartment","fact_zip_code","fact_city","fact_street","fact_building","fact_apartment","email","length","datepicker","dateFormat","startDate","Date","maxDate","minDate","typeInput","type","company_name","placeholder","minlength","Swiper","slidesPerView","spaceBetween","loop","breakpoints","576","768","navigation","nextEl","prevEl","timerEnd","repeatLink","repeatLinkShow","timerShow","fadeIn","hasClass","timer_end","now","Cookies","set","progressBarEndAfter","modalSendRequest","modalNoResponse"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';\n\n/**\n * Form function with static methods\n */\nfunction Form() {\n}\n\n/**\n * Sends request by ajax\n *\n * @param {string} action - The action.\n * @param {object} [data={}] - The data.\n * @param {object} [submitButton={}] - The submit button.\n */\nForm.send = function (action, data, submitButton) {\n\n  data = data || {};\n\n  if (submitButton) {\n    submitButton.prop('disabled', true);\n  }\n\n  $.ajax({\n    cache: false,\n    data: data,\n    dataType: 'json',\n    method: 'POST',\n    url: action,\n    success: function (data) {\n\n      if (submitButton) {\n        submitButton.prop('disabled', false);\n      }\n\n      // Opens modal\n      if (data.openModal) {\n        $(data.openModal.id).modal({\n          backdrop: data.openModal.backdrop || 'static',\n          keyboard: data.openModal.keyboard || false,\n        });\n      }\n\n      // Close modal\n      if (data.closeModal) {\n        $(data.closeModal.id).modal('hide');\n      }\n\n      // Remove element\n      if (data.removeElement) {\n        $(data.removeElement.id).fadeOut(300, function () {\n          $(this).remove();\n        });\n      }\n\n      // Timer\n      if (data.timer) {\n\n        // Progressbar\n        if (data.timer.progressBar) {\n          var progressBar = $(data.timer.progressBar.id),\n            progressBarInner = progressBar.find('div');\n        }\n\n        $(data.timer.id).countdown(data.timer.end)\n          .on('update.countdown', function (event) {\n            $(this).html(event.strftime('%M:%S'));\n\n            if (data.timer.progressBar) {\n              progressBarInner.width((data.timer.progressBar.endAfter - event.offset.totalSeconds) * progressBar.width() / data.timer.progressBar.endAfter);\n            }\n          })\n          .on('finish.countdown', function (event) {\n            $(this).html(event.strftime('00:00'));\n\n            if (data.timer.progressBar) {\n              progressBarInner.width('100%');\n            }\n\n            if (data.timer.onFinish.closeModal) {\n              $(data.timer.onFinish.closeModal.id).modal('hide');\n            }\n\n            if (data.timer.onFinish.openModal) {\n              $(data.timer.onFinish.openModal.id).modal({\n                backdrop: data.timer.onFinish.openModal.backdrop || 'static',\n                keyboard: data.timer.onFinish.openModal.keyboard || false,\n              });\n            }\n          });\n      }\n\n      // Shows message\n      if (data.message) {\n        Toast.create(data.error, data.message[0]);\n      }\n\n      // Another ajax\n      if (data.ajax) {\n        Form.send(data.ajax.action);\n      }\n\n      // Redirects\n      if (data.redirect) {\n        window.location.href = data.redirect;\n      }\n    },\n    error: function (e) {\n      console.log(e); //TODO remove it\n\n      if (submitButton) {\n        submitButton.prop('disabled', false);\n      }\n\n      Toast.create(true, 'Произошла ошибка, попробуйте ещё раз.');\n    }\n  });\n};\n\n/**\n * Change status of submit button\n *\n * @param {object} form\n * @param {object} button\n */\nForm.changeButtonStatus = function changeButtonStatus(form, button) {\n  if (form.validate().checkForm()) {\n    button.prop('disabled', false);\n  } else {\n    button.prop('disabled', true);\n  }\n};\n","'use strict';\n\n/**\n * Toast function with static methods\n */\nfunction Toast() {\n}\n\n/**\n * Creates a toast\n *\n * @param {boolean} error\n * @param {string} message\n */\nToast.create = function (error, message) {\n\n  if (message === '') return false;\n\n  var toast = $('<div class=\"toast toast_active\">' + message + '</div>');\n\n  $('body').append(toast);\n\n  if (error) {\n    toast.addClass('toast_status_error');\n  } else {\n    toast.addClass('toast_status_success');\n  }\n\n  setTimeout(function () {\n    toast.remove();\n  }, 4000);\n};\n","'use strict';\n\n/**\n * Adds new methods for validator\n */\n$(function () {\n  /**\n   * Validates passport number\n   */\n  $.validator.addMethod('passport', function (value, element) {\n    return this.optional(element) || /^\\d{2}\\s\\d{2}\\s\\d{6}$/.test(value);\n  }, 'Введите данные в формате 01 02 343543');\n\n  /**\n   * Validates passport division code\n   */\n  $.validator.addMethod('division_code', function (value, element) {\n    return this.optional(element) || /^\\d{3}-\\d{3}$/.test(value);\n  }, 'Введите данные в формате 770-001');\n\n  /**\n   * Validates ru phone number\n   */\n  $.validator.addMethod('phone_ru', function (value, element) {\n    return this.optional(element) || /^\\+7\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/.test(value);\n  }, 'Введите номер в формате +7(xxx)xxx-xx-xx');\n\n  /**\n   * Validates plain text\n   */\n  $.validator.addMethod('plain_text', function (value, element) {\n    return this.optional(element) || !/(<([^>]+)>)/ig.test(value);\n  }, 'Поле не должно содержать HTML-теги');\n\n});\n","'use strict';\n\n$(function () {\n\n  $('.js-applicationChangeStatus').on('click', function () {\n    var action = $(this).data('action');\n\n    if (action) {\n      Form.send(action);\n    }\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var smsCodeInput = $('#js-formSuccessInputCode'),\n    smsCodeAsterisks = $('#js-formSuccessInputAsterisks');\n\n  smsCodeInput.on('keyup change', function () {\n    smsCodeAsterisks.text(smsCodeInput.val());\n    var smsCodeAsterisksValue = smsCodeAsterisks.text();\n    smsCodeAsterisks.text(smsCodeAsterisksValue.replace(/[0-9]/g, '*'));\n  });\n  \n});","'use strict';\n\n$(function () {\n\n  var form = $('#js-formCodeSms'),\n    smsCodeInput = $('#js-formCodeSmsInputCode'),\n    submitButton = $('#js-formCodeSmsBtnSubmit');\n\n  smsCodeInput.inputmask('9999');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('input_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('input_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    ignore: [],\n    rules: {\n      sms_code: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      terms: {\n        required: true,\n        plain_text: true\n      }\n    },\n    messages: {\n      sms_code: {\n        required: 'Это обязательное поле',\n        number: 'Код должен содержать только цифры'\n      },\n      terms: {\n        required: 'Ознакомьтесь с условиями',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var form = $('#js-formPhoneNumber'),\n    phoneInput = $('#js-formPhoneNumberInputPhone'),\n    submitButton = $('#js-formPhoneNumberBtnSubmit');\n\n  phoneInput.inputmask('+7(999)999-99-99');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('input_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('input_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      phone: {\n        required: true,\n        phone_ru: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n    },\n    messages: {\n      phone: {\n        required: 'Это обязательное поле',\n        phone_ru: 'Введите номер в формате +7(xxx)xxx-xx-xx'\n      }\n    },\n    errorClass: 'error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var form = $('#js-formProfileClient'),\n    birthDateInput = $('#js-formProfileClientInputBirthDate'),\n    tinInput = $('#js-formProfileClientInputTin'),\n    passportNumberInput = $('#js-formProfileClientInputPassportNumber'),\n    passportDivisionCodeInput = $('#js-formProfileClientInputPassportDivisionCode'),\n    passportIssuedDateInput = $('#js-formProfileClientInputPassportIssuedDate'),\n    regZipCodeInput = $('#js-formProfileClientInputRegZipCode'),\n    regCityInput = $('#js-formProfileClientInputRegCity'),\n    regBuildingInput = $('#js-formProfileClientInputRegBuilding'),\n    regStreetInput = $('#js-formProfileClientInputRegStreet'),\n    regApartmentInput = $('#js-formProfileClientInputRegApartment'),\n    factZipCodeInput = $('#js-formProfileClientInputFactZipCode'),\n    factCityInput = $('#js-formProfileClientInputFactCity'),\n    factBuildingInput = $('#js-formProfileClientInputFactBuilding'),\n    factStreetInput = $('#js-formProfileClientInputFactStreet'),\n    factApartmentInput = $('#js-formProfileClientInputFactApartment'),\n    submitButton = $('#js-formProfileClientBtnSubmit');\n\n  birthDateInput.inputmask('99.99.9999');\n  tinInput.inputmask('999999999999');\n  passportNumberInput.inputmask('99 99 999999');\n  passportDivisionCodeInput.inputmask('999-999');\n  passportIssuedDateInput.inputmask('99.99.9999');\n  regZipCodeInput.inputmask('999999');\n  factZipCodeInput.inputmask('999999');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('input_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('input_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      last_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      first_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      middle_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      birth_date: {\n        required: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      birth_place: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      tin: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      passport_number: {\n        required: true,\n        passport: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      passport_division_code: {\n        required: true,\n        division_code: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      passport_issued_by: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      passport_issued_date: {\n        required: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      workplace: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      salary: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      reg_zip_code: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      reg_city: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      reg_street: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      reg_building: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      reg_apartment: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      fact_zip_code: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      fact_city: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      fact_street: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      fact_building: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      fact_apartment: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      email: {\n        required: true,\n        email: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      last_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      first_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      middle_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      birth_date: {\n        required: 'Это обязательное поле',\n      },\n      birth_place: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      tin: {\n        required: 'Это обязательное поле',\n        number: 'Номер ИНН должен содержать только цифры'\n      },\n      passport_number: {\n        required: 'Это обязательное поле',\n        passport: 'Введите данные в формате 01 02 343543'\n      },\n      passport_division_code: {\n        required: 'Это обязательное поле',\n        division_code: 'Введите данные в формате 770-001'\n      },\n      passport_issued_by: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      passport_issued_date: {\n        required: 'Это обязательное поле'\n      },\n      workplace: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      salary: {\n        required: 'Это обязательное поле',\n        number: 'Поле должено содержать только цифры'\n      },\n      reg_zip_code: {\n        required: 'Это обязательное поле',\n        number: 'Индекс должен содержать только цифры'\n      },\n      reg_city: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      reg_street: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      reg_building: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      reg_apartment: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      fact_zip_code: {\n        required: 'Это обязательное поле',\n        number: 'Индекс должен содержать только цифры'\n      },\n      fact_city: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      fact_street: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      fact_building: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      fact_apartment: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      email: {\n        required: 'Это обязательное поле',\n        email: 'Введите e-mail в формате ivanov@gmail.com'\n      }\n    },\n    errorClass: 'error-text',\n    errorElement: 'span'\n  });\n\n  $('#js-formProfileClientInputIsAddressMatched').on('click', function () {\n    if ($(this).is(':checked')) {\n      factZipCodeInput.val(regZipCodeInput.val());\n      factCityInput.val(regCityInput.val());\n      factBuildingInput.val(regBuildingInput.val());\n      factStreetInput.val(regStreetInput.val());\n      factApartmentInput.val(regApartmentInput.val());\n    } else {\n      factZipCodeInput.val('');\n      factCityInput.val('');\n      factBuildingInput.val('');\n      factStreetInput.val('');\n      factApartmentInput.val('');\n    }\n  });\n\n  if (form.length > 0) {\n    setTimeout(Form.changeButtonStatus, 300, form, submitButton);\n  }\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n  birthDateInput.datepicker({\n    dateFormat: 'dd.mm.yyyy',\n    startDate: new Date(1990, 0, 1, 0, 0, 0, 0),\n    maxDate: new Date()\n  });\n\n  passportIssuedDateInput.datepicker({\n    dateFormat: 'dd.mm.yyyy',\n    startDate: new Date(2010, 0, 1, 0, 0, 0, 0),\n    minDate: new Date(1997, 9, 1, 0, 0, 0, 0),\n    maxDate: new Date()\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formProfileShop'),\n    typeInput = form.find('[name=\"type\"]'),\n    tinInput = $('#js-formProfileShopInputTin'),\n    submitButton = $('#js-formProfileShopBtnSubmit');\n\n  tinInput.inputmask('999999999999');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('input_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('input_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      type: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      last_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      first_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      middle_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      tin: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      company_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      email: {\n        required: true,\n        email: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      type: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      last_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      first_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      middle_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      tin: {\n        required: 'Это обязательное поле',\n        number: 'Номер ИНН должен содержать только цифры'\n      },\n      company_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      email: {\n        required: 'Это обязательное поле',\n        email: 'Введите e-mail в формате ivanov@gmail.com'\n      }\n    },\n    errorClass: 'error-text',\n    errorElement: 'span'\n  });\n\n  typeInput.on('change', function () {\n    if ($(this).val() === 'entrepreneur') {\n      tinInput.inputmask('999999999999');\n    } else {\n      tinInput.inputmask('9999999999');\n    }\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formSuccess'),\n    smsCodeInput = $('#js-formSuccessInputCode'),\n    submitButton = $('#js-formSuccessBtnSubmit');\n\n  smsCodeInput.inputmask('9999',{'placeholder': ''}); // deleted placeholder\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('input_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('input_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    ignore: [],\n    rules: {\n      sms_code: {\n        required: true,\n        number: true,\n        minlength: 4, // added minlength\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      terms: {\n        required: true,\n        plain_text: true\n      }\n    },\n    messages: {\n      sms_code: {\n        required: 'Это обязательное поле',\n        number: 'Код должен содержать только цифры',\n        minlength: 'Код должен содержать 4 символа' // added error text\n      },\n      terms: {\n        required: 'Ознакомьтесь с условиями',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup keydown blur change', 'input, select, textarea', function () { // added keydown\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var modal = $('#js-modalNoResponse');\n\n  if (modal.data('open')) {\n    modal.modal({\n      backdrop: 'static',\n      keyboard: false\n    });\n  }\n});\n","'use strict';\n\n$(function () {\n  var modal = $('#js-modalSendRequest');\n\n  if (modal.data('open')) {\n    modal.modal({\n      backdrop: 'static',\n      keyboard: false\n    });\n  }\n});\n","'use strict';\n\n$(function () {\n  var modal = $('#js-modalWaitResponse');\n\n  if (modal.data('open')) {\n    modal.modal({\n      backdrop: 'static',\n      keyboard: false\n    });\n  }\n});\n","'use strict';\n\n$(function () {\n\n  new Swiper('.swiper-container', {\n    slidesPerView: 3,\n    spaceBetween: 30,\n    loop: true,\n    breakpoints: {\n      576: {\n        slidesPerView: 1,\n        spaceBetween: 10\n      },\n      768: {\n        slidesPerView: 2\n      }\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var timer = $('#js-codeSmsTimer'),\n    timerEnd = timer.data('timer-end'),\n    repeatLink = $('#js-codeSmsRepeatSend'),\n    repeatLinkShow = $('#js-codeSmsRepeatShow'),  // find #js-codeSmsRepeatShow\n    timerShow = $('#js-codeSmsTimerShow'); // find #js-codeSmsTimerShow\n\n  timer.countdown(timerEnd * 1000)\n    .on('update.countdown', function (event) {\n      $(this).html(event.strftime('%M:%S'));\n    })\n    .on('finish.countdown', function (event) {\n      $(this).html(event.strftime('00:00'));\n      repeatLink.removeClass('link_disabled');\n      timerShow.fadeOut(); // hide #js-codeSmsTimerShow\n      repeatLinkShow.fadeIn(); // show #js-codeSmsRepeatShow\n    });\n\n  repeatLink.on('click', function () {\n\n    if ($(this).hasClass('link_disabled')) return false;\n\n    $.ajax({\n      cache: false,\n      dataType: 'json',\n      method: 'POST',\n      url: $(this).data('link-action'),\n      success: function (data) {\n        repeatLinkShow.fadeOut(); // hide #js-codeSmsRepeatShow\n        timerShow.fadeIn(); // show #js-codeSmsTimerShow\n\n        repeatLink.addClass('link_disabled');\n        Toast.create(data.error, data.message[0]);\n\n        var timer_end = Date.now() / 1000 + 180;\n\n        Cookies.set('code_sms_timer', timer_end);\n\n        timer.countdown(timer_end * 1000)\n          .on('update.countdown', function (event) {\n            $(this).html(event.strftime('%M:%S'));\n          })\n          .on('finish.countdown', function (event) {\n            $(this).html(event.strftime('00:00'));\n            repeatLink.removeClass('link_disabled');\n          });\n      },\n      error: function () {\n        Toast.create(true, 'Произошла ошибка, попробуйте ещё раз.');\n      }\n    });\n\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var timer = $('#js-profileClientTimer'),\n    timerEnable = timer.data('timer-enable');\n\n  if (!timerEnable) return false;\n\n  var timerEnd = timer.data('timer-end'),\n    progressBar = $('#js-profileClientProgressBar'),\n    progressBarInner = progressBar.find('div'),\n    progressBarEndAfter = progressBar.data('end-after'),\n    modalSendRequest = $('#js-modalSendRequest'),\n    modalNoResponse = $('#js-modalNoResponse');\n\n  timer.countdown(timerEnd)\n    .on('update.countdown', function (event) {\n      $(this).html(event.strftime('%M:%S'));\n\n      progressBarInner.width((progressBarEndAfter - event.offset.totalSeconds) * progressBar.width() / progressBarEndAfter);\n    })\n    .on('finish.countdown', function (event) {\n      $(this).html(event.strftime('00:00'));\n\n      progressBarInner.width('100%');\n\n      modalSendRequest.modal('hide');\n\n      modalNoResponse.modal({\n        backdrop: 'static',\n        keyboard: false\n      });\n    });\n});\n"]}