{"version":3,"sources":["form.js","toast.js","validator.js","delete-admin.js","form-add-admin.js","form-edit-admin.js","form-edit-request.js","form-edit-shop.js","form-login.js","side-menu.js","slider-integration-plugins.js"],"names":["Form","Toast","send","action","data","submitButton","prop","$","ajax","cache","dataType","method","url","success","openModal","id","modal","backdrop","keyboard","closeModal","removeElement","fadeOut","this","remove","timer","progressBar","progressBarInner","find","countdown","end","on","event","html","strftime","width","endAfter","offset","totalSeconds","onFinish","message","create","error","redirect","window","location","href","e","console","log","changeButtonStatus","form","button","validate","checkForm","toast","append","addClass","setTimeout","validator","addMethod","value","element","optional","test","preventDefault","confirm","currentBtn","remove_id","is","phoneInput","inputmask","highlight","unhighlight","removeClass","submitHandler","attr","serialize","rules","name","required","plain_text","normalizer","trim","email","phone","phone_ru","active","messages","errorClass","errorElement","password","tracking_id","typeInput","typeInputChecked","tinInput","val","type","last_name","first_name","middle_name","tin","number","company_name","sideMenu","toggleClass","Swiper","slidesPerView","spaceBetween","loop","breakpoints","576","768","navigation","nextEl","prevEl"],"mappings":"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","file":"main-admin.min.js","sourcesContent":["'use strict';\n\n/**\n * Form function with static methods\n */\nfunction Form() {\n}\n\n/**\n * Sends request by ajax\n *\n * @param {string} action - The action.\n * @param {object} [data={}] - The data.\n * @param {object} [submitButton={}] - The submit button.\n */\nForm.send = function (action, data, submitButton) {\n\n  data = data || {};\n\n  if (submitButton) {\n    submitButton.prop('disabled', true);\n  }\n\n  $.ajax({\n    cache: false,\n    data: data,\n    dataType: 'json',\n    method: 'POST',\n    url: action,\n    success: function (data) {\n\n      if (submitButton) {\n        submitButton.prop('disabled', false);\n      }\n\n      // Opens modal\n      if (data.openModal) {\n        $(data.openModal.id).modal({\n          backdrop: data.openModal.backdrop || 'static',\n          keyboard: data.openModal.keyboard || false,\n        });\n      }\n\n      // Close modal\n      if (data.closeModal) {\n        $(data.closeModal.id).modal('hide');\n      }\n\n      // Remove element\n      if (data.removeElement) {\n        $(data.removeElement.id).fadeOut(300, function () {\n          $(this).remove();\n        });\n      }\n\n      // Timer\n      if (data.timer) {\n\n        // Progressbar\n        if (data.timer.progressBar) {\n          var progressBar = $(data.timer.progressBar.id),\n            progressBarInner = progressBar.find('div');\n        }\n\n        $(data.timer.id).countdown(data.timer.end)\n          .on('update.countdown', function (event) {\n            $(this).html(event.strftime('%M:%S'));\n\n            if (data.timer.progressBar) {\n              progressBarInner.width((data.timer.progressBar.endAfter - event.offset.totalSeconds) * progressBar.width() / data.timer.progressBar.endAfter);\n            }\n          })\n          .on('finish.countdown', function (event) {\n            $(this).html(event.strftime('00:00'));\n\n            if (data.timer.progressBar) {\n              progressBarInner.width('100%');\n            }\n\n            if (data.timer.onFinish.closeModal) {\n              $(data.timer.onFinish.closeModal.id).modal('hide');\n            }\n\n            if (data.timer.onFinish.openModal) {\n              $(data.timer.onFinish.openModal.id).modal({\n                backdrop: data.timer.onFinish.openModal.backdrop || 'static',\n                keyboard: data.timer.onFinish.openModal.keyboard || false,\n              });\n            }\n          });\n      }\n\n      // Shows message\n      if (data.message) {\n        Toast.create(data.error, data.message[0]);\n      }\n\n      // Redirects\n      if (data.redirect) {\n        window.location.href = data.redirect;\n      }\n    },\n    error: function (e) {\n      console.log(e); //TODO remove it\n\n      if (submitButton) {\n        submitButton.prop('disabled', false);\n      }\n\n      Toast.create(true, 'Произошла ошибка, попробуйте ещё раз.');\n    }\n  });\n};\n\n/**\n * Change status of submit button\n *\n * @param {object} form\n * @param {object} button\n */\nForm.changeButtonStatus = function changeButtonStatus(form, button) {\n  if (form.validate().checkForm()) {\n    button.prop('disabled', false);\n  } else {\n    button.prop('disabled', true);\n  }\n};\n","'use strict';\n\n/**\n * Toast function with static methods\n */\nfunction Toast() {\n}\n\n/**\n * Creates a toast\n *\n * @param {boolean} error\n * @param {string} message\n */\nToast.create = function (error, message) {\n\n  if (message === '') return false;\n\n  var toast = $('<div class=\"toast toast_active\">' + message + '</div>');\n\n  $('body').append(toast);\n\n  if (error) {\n    toast.addClass('toast_status_error');\n  } else {\n    toast.addClass('toast_status_success');\n  }\n\n  setTimeout(function () {\n    toast.remove();\n  }, 4000);\n};\n","'use strict';\n\n/**\n * Adds new methods for validator\n */\n$(function () {\n  /**\n   * Validates passport number\n   */\n  $.validator.addMethod('passport', function (value, element) {\n    return this.optional(element) || /^\\d{2}\\s\\d{2}\\s\\d{6}$/.test(value);\n  }, 'Введите данные в формате 01 02 343543');\n\n  /**\n   * Validates passport division code\n   */\n  $.validator.addMethod('division_code', function (value, element) {\n    return this.optional(element) || /^\\d{3}-\\d{3}$/.test(value);\n  }, 'Введите данные в формате 770-001');\n\n  /**\n   * Validates ru phone number\n   */\n  $.validator.addMethod('phone_ru', function (value, element) {\n    return this.optional(element) || /^\\+7\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/.test(value);\n  }, 'Введите номер в формате +7(xxx)xxx-xx-xx');\n\n  /**\n   * Validates plain text\n   */\n  $.validator.addMethod('plain_text', function (value, element) {\n    return this.optional(element) || !/(<([^>]+)>)/ig.test(value);\n  }, 'Поле не должно содержать HTML-теги');\n\n});\n","'use strict';\n\n$(function () {\n  var deleteBtn = $('.js-deleteAdmin');\n\n  deleteBtn.on('click', function (event) {\n    event.preventDefault();\n\n    if (confirm('Вы уверены, что хотите удалить пользователя?')) {\n      var currentBtn = $(this),\n        action = currentBtn.data('action'),\n        data = {\n          id: currentBtn.data('id'),\n          remove_id: currentBtn.data('remove-id')\n        };\n\n      if (!currentBtn.is(':disabled')) {\n        Form.send(action, data, currentBtn);\n      }\n    }\n\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formAddAdmin'),\n    phoneInput = $('#js-formAddAdminInputPhone'),\n    submitButton = $('#js-formAddAdminBtnSubmit');\n\n  phoneInput.inputmask('+7(999)999-99-99');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('form-control_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('form-control_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      email: {\n        required: true,\n        email: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      phone: {\n        required: false,\n        phone_ru: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      active: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      email: {\n        required: 'Это обязательное поле',\n        email: 'Введите e-mail в формате ivanov@gmail.com'\n      },\n      phone: {\n        required: 'Это обязательное поле',\n        phone_ru: 'Введите номер в формате +7(xxx)xxx-xx-xx'\n      },\n      active: {\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'form-control__error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formEditAdmin'),\n    phoneInput = $('#js-formEditAdminInputPhone'),\n    submitButton = $('#js-formEditAdminBtnSubmit');\n\n  phoneInput.inputmask('+7(999)999-99-99');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('form-control_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('form-control_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      email: {\n        required: true,\n        email: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      password: {\n        required: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      phone: {\n        required: false,\n        phone_ru: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      active: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      email: {\n        required: 'Это обязательное поле',\n        email: 'Введите e-mail в формате ivanov@gmail.com'\n      },\n      password: {\n        required: 'Это обязательное поле'\n      },\n      phone: {\n        required: 'Это обязательное поле',\n        phone_ru: 'Введите номер в формате +7(xxx)xxx-xx-xx'\n      },\n      active: {\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'form-control__error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formEditRequest'),\n    submitButton = $('#js-formEditRequestBtnSubmit');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('form-control_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('form-control_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      tracking_id: {\n        required: false,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      tracking_id: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'form-control__error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formEditShop'),\n    typeInput = form.find('[name=\"type\"]'),\n    typeInputChecked = form.find('[name=\"type\"]:checked'),\n    tinInput = $('#js-formEditShopInputTin'),\n    submitButton = $('#js-formEditShopBtnSubmit');\n\n  if (typeInputChecked.val() === 'entrepreneur') {\n    tinInput.inputmask('999999999999');\n  } else {\n    tinInput.inputmask('9999999999');\n  }\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('form-control_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('form-control_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      type: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      last_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      first_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      middle_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      tin: {\n        required: true,\n        number: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      company_name: {\n        required: true,\n        plain_text: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      }\n    },\n    messages: {\n      type: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      last_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      first_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      middle_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      },\n      tin: {\n        required: 'Это обязательное поле',\n        number: 'Номер ИНН должен содержать только цифры'\n      },\n      company_name: {\n        required: 'Это обязательное поле',\n        plain_text: 'Поле не должно содержать HTML-теги'\n      }\n    },\n    errorClass: 'form-control__error-text',\n    errorElement: 'span'\n  });\n\n  typeInput.on('change', function () {\n    if ($(this).val() === 'entrepreneur') {\n      tinInput.inputmask('999999999999');\n    } else {\n      tinInput.inputmask('9999999999');\n    }\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  var form = $('#js-formLogin'),\n    submitButton = $('#js-formLoginBtnSubmit');\n\n  form.validate({\n    highlight: function (element) {\n      $(element).addClass('form-control_error');\n    },\n    unhighlight: function (element) {\n      $(element).removeClass('form-control_error');\n    },\n    submitHandler: function (form) {\n      var action = $(form).attr('action'),\n        data = $(form).serialize();\n\n      if (!submitButton.is(':disabled')) {\n        Form.send(action, data, submitButton);\n      }\n    },\n    rules: {\n      email: {\n        required: true,\n        email: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n      password: {\n        required: true,\n        normalizer: function (value) {\n          return $.trim(value);\n        }\n      },\n    },\n    messages: {\n      email: {\n        required: 'Это обязательное поле',\n        email: 'Введите логин в формате ivanov@gmail.com'\n      },\n      password: {\n        required: 'Это обязательное поле'\n      },\n    },\n    errorClass: 'form-control__error-text',\n    errorElement: 'span'\n  });\n\n  form.on('keyup blur change', 'input, select, textarea', function () {\n    Form.changeButtonStatus(form, submitButton);\n  });\n\n});\n","'use strict';\n\n$(function () {\n  var sideMenu = $('#js-sideMenu'),\n    sideMenuToggleBtn = $('#js-sideMenuToggleButton');\n\n  sideMenuToggleBtn.on('click', function () {\n    sideMenu.toggleClass('side-menu_active');\n  });\n\n});\n","'use strict';\n\n$(function () {\n\n  new Swiper('#js-sliderIntegrationPlugin', {\n    slidesPerView: 4,\n    spaceBetween: 20,\n    loop: true,\n    breakpoints: {\n      576: {\n        slidesPerView: 1,\n        spaceBetween: 10\n      },\n      768: {\n        slidesPerView: 2\n      }\n    },\n    navigation: {\n      nextEl: '#js-sliderIntegrationPluginNextBtn',\n      prevEl: '#js-sliderIntegrationPluginPrevBtn',\n    },\n  });\n\n});\n"]}